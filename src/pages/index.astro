---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from "@/layouts/fullPageBox.astro";
import ItemPreview from './items/_components/ItemPreview.astro';
import CratePreview from './crates/_components/CratePreview.astro';
import BlogPostPreview from './blog/_components/BlogPostPreview.astro';
import TutorialPostPreview from './tutorials/_components/TutorialPostPreview.astro';

const allItems = [...(await getCollection('bcitems'))];
let recommendedItems: CollectionEntry<"bcitems">[] = [];

const shuffledItems = allItems.sort(() => Math.random() - 0.5);

recommendedItems = shuffledItems.slice(0, Math.min(5, shuffledItems.length));

const allCrates = [...(await getCollection('crates'))];
let recommendedCrates: CollectionEntry<"crates">[] = [];

const shuffledCrates = allCrates.sort(() => Math.random() - 0.5);

recommendedCrates = shuffledCrates.slice(0, Math.min(5, shuffledCrates.length));

const allBlogPosts = [...(await getCollection('blog'))];
let recommendedBlogPosts: CollectionEntry<"blog">[] = [];

const sortedBlogPosts = allBlogPosts.sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime());

recommendedBlogPosts = sortedBlogPosts.slice(0, 5);

const allTutorials = [...(await getCollection('tutorials'))];
let recommendedTutorials: CollectionEntry<"tutorials">[] = [];

const sortedTutorials = allTutorials.sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime());

recommendedTutorials = sortedTutorials.slice(0, 5);
---

<Layout>
	<main class="extra-top-padding">
		<div class="flex h-[50%] flex-col-reverse justify-center md:flex-row">
			<div class="prose flex flex-col items-center justify-center text-center md:basis-1/2 ">
				<h1>BCUW</h1>
				<p>
					BlossomCraft Unofficial Wiki
					<br />
						<>
							Owned and maintained by{" "}
							<span class="mention">@ðŸŒ¸ Altie122</span>
						</>
				</p>
				<p>
					Now with a total of <span class="text-ranks-celestial">{allItems.length}</span> items and <span class="text-ranks-celestial">{allCrates.length}</span> crates and counting!
				</p>
			</div>
			<div class="flex items-center justify-center md:basis-1/2 ">
				<img
					src="/bcuwTitleNormal.png"
					alt="BCUW"
					class="h-auto w-1/2"
					style={{
						filter: "drop-shadow(0 0 3rem hsla(306, 66%, 66%, 0.2))",
					}}
					width={400}
					height={400}
				/>
			</div>
		</div>
		<div class="flex flex-row flex-wrap gap-2 w-full px-2">
			<div class="flex-grow flex-shrink">
				<h2 class="prose-h2 noborder text-center">Explore These Items:</h2>
				<div class="flex gap-2 flex-wrap flex-col w-full p-2">
					{
						recommendedItems.map((item) => (
							// @ts-expect-error post has two diffrent types that align enough to work
							<ItemPreview post={item} />
						))
					}
				</div>
			</div>
			<div class="flex-grow flex-shrink">
				<h2 class="prose-h2 noborder text-center">Explore These Crates:</h2>
				<div class="flex gap-2 flex-wrap flex-col w-full p-2">
					{
						recommendedCrates.map((item) => (
							<CratePreview post={item} />
						))
					}
				</div>
			</div>
			<div class="flex-grow flex-shrink">
				<h2 class="prose-h2 noborder text-center">Recent Blog Posts:</h2>
				<div class="flex gap-2 flex-wrap flex-col w-full p-2">
					{
						recommendedBlogPosts.map((item) => (
							<BlogPostPreview post={item} />
						))
					}
				</div>
			</div>
			<div class="flex-grow flex-shrink">
				<h2 class="prose-h2 noborder text-center">Recent Tutorials:</h2>
				<div class="flex gap-2 flex-wrap flex-col w-full p-2">
					{
						recommendedTutorials.map((item) => (
							<TutorialPostPreview post={item} />
						))
					}
				</div>
			</div>
		</div>
	</main>
</Layout>