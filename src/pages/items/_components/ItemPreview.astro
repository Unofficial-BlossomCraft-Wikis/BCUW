---
import { format } from "date-fns";
import { resolveCoverImage } from "@/content/blog/_resolveImages.js";
import { randomFromArray } from "@/lib/random";
import CDN from "@components/CDN.astro";
import { Badge } from "@components/ui/badge";

export type Props = {
	post: {
		slug: string;
		data: {
			title: string;
			images: {
				color: string;
				item: string;
			};
			type: string;
			crate?: string;
			rarity?: string;
			enchantments?: string[];
		};
	};
};

const { post } = Astro.props;
---
<article class="border p-4 duration-300 ease-out focus-within:outline hover:bg-sidebar rounded-lg shadow flex-shrink flex-grow">
	<a
		href={`/crates/${post.slug}/`}
		data-astro-prefetch
		class="block outline-none"
	>
	<div>
		<a href={`/items/${post.slug}/`} class="flex flex-row gap-2 items-center flex-wrap">
			<CDN id={post.data.images.item} alt={post.data.title} />
			<h2 class="noborder" id={post.slug}>{post.data.title}</h2>
			<div class="flex flex-col gap-2">
			{
				post.data.type === "magic/infinite" ? (
					<Badge variant="immortal" className="no-underline">{post.data.type}</Badge>
				) : (
					<Badge className="no-underline">{post.data.type}</Badge>
				)
			}
			{
				post.data.rarity && (
					<Badge className="no-underline">{post.data.rarity}</Badge>
				)
			}
			</div>
			{
				post.data.enchantments && (
					<div class="flex flex-wrap flex-row gap-2">
						{
							post.data.enchantments.map((enchantment: string) => {
								return (
									<Badge>{enchantment}</Badge>
								)
							})
						}
					</div>
				)
			}
		</a>
	</div>
</a>
</article>