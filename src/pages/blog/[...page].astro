---
import Layout from '@/layouts/blog/home.astro';
import Pagination from "@/components/paginationComponent.astro";
import { getCollection, getEntry, type CollectionEntry } from 'astro:content';
import type { GetStaticPathsOptions, Page } from "astro";
import BlogPostPreview from "./_components/BlogPostPreview.astro"

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	// 	const posts = [...(await getCollection("blog")), ...(await getCollection("updates"))];
	const posts = [...(await getCollection('blog', ({ data }) => {
  // return import.meta.env.PROD ? data.isDraft !== true : true;
  return data.isDraft !== true;
	}))];
	console.log(posts);
	if (posts) {
		const sortedPosts = posts.sort(
			(a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime(),
		);

		return paginate(sortedPosts, { pageSize: 5 });
	} else {
		return paginate([], { pageSize: 5 });
	}
}

const { page } = Astro.props as {
	page: Page<CollectionEntry<"blog">>;
};

const allPages = [...Array(page.lastPage).keys()].map((num) => {
	return `/blog${num === 0 ? "" : `/${String(num + 1)}`}`;
});

// const allPosts = await getCollection("blog"); // unused

---

<Layout title="Blog" description='placeholder!'>
	<main class="w-full">
    <article class="border p-4 rounded-lg shadow bg-sidebar text-sidebar-foreground border-sidebar-border text-center">
      <h1 class="prose-h1">BCUW Blog</h1>
    </article>
    <div class="flex flex-col items-center gap-2 pt-2">
			<ul class="flex flex-col gap-2 list-none w-full">
				{
					page.data.length > 0 ? (page.data.map((post) => (
						<li>
							<BlogPostPreview post={post} />
						</li>
					))) : (<h2 class="prose-h2">There are no posts</h2>)
				}
			</ul>
      {
        allPages.length > 1 && (
        <Pagination restRoute allPages={allPages} page={page} class="mx-auto" />
      )
      }
		</div>
	</main>
</Layout>